{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Documents\\\\FYP\\\\code\\\\web-app\\\\sign-language-translator-front\\\\src\\\\components\\\\classifier\\\\Classifier.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport './Classifier.css';\nimport { Spinner, Button, Alert } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Classifier extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      files: [],\n      isLoading: false,\n      userImage: null\n    };\n\n    this.onDrop = files => {\n      this.setState({\n        files: [],\n        isLoading: true,\n        userImage: null\n      });\n      this.loadImage(files);\n    };\n\n    this.loadImage = files => {\n      setTimeout(() => {\n        this.setState({\n          files,\n          isLoading: false\n        });\n      }, 1000); // console.log('image loaded');\n      // console.log(files);\n    };\n\n    this.sendImage = () => {\n      let formData = new FormData();\n      formData.append('image_field', this.state.files[0], this.state.files[0].name);\n      axios.post('http://localhost:8000/api/images/', formData, {\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'multipart/form-data'\n        }\n      }).then(res => {\n        console.log(res.data.id);\n        this.getClass(res);\n      }).catch(err => {\n        console.log('Error message: ' + err);\n      });\n    };\n\n    this.getClass = res_obj => {\n      this.setState({\n        files: []\n      });\n      axios.get('http://localhost:8000/api/images/' + res_obj.data.id + '/', {\n        headers: {\n          'accept': 'application/json'\n        }\n      }).then(res => {\n        console.log(res);\n        this.setState({\n          userImage: res\n        });\n      }).catch(err => {\n        console.log('Error message: ' + err);\n      });\n    };\n  }\n\n  render() {\n    const files = this.state.files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [file.name, \" - \", file.size, \" bytes\"]\n    }, file.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(Dropzone, {\n      onDrop: this.onDrop,\n      accept: \"image/png, image/jpeg\",\n      children: ({\n        getRootProps,\n        getInputProps\n      }) => /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n            className: 'dropzone back'\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-image mb-2 dropbox_text\",\n            style: {\n              fontSize: 100\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"dropbox_text\",\n            children: \"Drag 'n' drop some files here, or click to select files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n          children: files\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), this.state.files.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          size: \"lg\",\n          className: \"mt-3\",\n          onClick: this.sendImage,\n          children: \"Select Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), this.state.isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"grow\",\n          role: \"status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), this.state.userImage && /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"dark\",\n            children: this.state.userImage.data.classification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            className: \"justify-content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Classifier;","map":{"version":3,"sources":["C:/Users/Joseph/Documents/FYP/code/web-app/sign-language-translator-front/src/components/classifier/Classifier.js"],"names":["React","Component","Dropzone","Spinner","Button","Alert","axios","Classifier","state","files","isLoading","userImage","onDrop","setState","loadImage","setTimeout","sendImage","formData","FormData","append","name","post","headers","then","res","console","log","data","id","getClass","catch","err","res_obj","get","render","map","file","size","getRootProps","getInputProps","className","fontSize","length","classification"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport './Classifier.css';\r\nimport {Spinner, Button, Alert} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nclass Classifier extends Component {\r\n    state = { \r\n        files: [],\r\n        isLoading: false,\r\n        userImage: null,\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.getImages()\r\n    // }\r\n\r\n    // getImages = () => {\r\n    //     axios.get('http://localhost:8000/api/images/', {\r\n    //         headers: {\r\n    //             'accept': 'application/json'\r\n    //         }\r\n    //     }).then(res=>{\r\n    //         console.log(res)\r\n    //     })\r\n    // }\r\n\r\n    onDrop = (files) => {\r\n        this.setState({\r\n            files: [],\r\n            isLoading: true,\r\n            userImage: null,\r\n        })\r\n        this.loadImage(files)\r\n    }\r\n\r\n    loadImage = (files) => {\r\n        setTimeout(() => {\r\n            this.setState({\r\n                files,\r\n                isLoading: false\r\n            })\r\n        }, 1000);\r\n        // console.log('image loaded');\r\n        // console.log(files);\r\n    }\r\n\r\n    sendImage = () => {\r\n        let formData = new FormData();\r\n        formData.append('image_field', this.state.files[0], this.state.files[0].name);\r\n        axios.post('http://localhost:8000/api/images/', formData, {\r\n            headers: {\r\n                'accept': 'application/json',\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        })\r\n        .then(res=>{\r\n            console.log(res.data.id);\r\n            this.getClass(res);\r\n        })\r\n        .catch(err=>{\r\n            console.log('Error message: ' + err);\r\n        })\r\n    }\r\n\r\n    getClass = (res_obj) => {\r\n        this.setState({\r\n            files:[]\r\n        })\r\n        axios.get('http://localhost:8000/api/images/'+res_obj.data.id+'/', {\r\n            headers: {\r\n                'accept': 'application/json',\r\n            }\r\n        })\r\n        .then(res=>{\r\n            console.log(res)\r\n            this.setState({userImage:res})\r\n        })\r\n        .catch(err=>{\r\n            console.log('Error message: ' + err)\r\n        })\r\n\r\n    }\r\n\r\n    render() { \r\n        const files = this.state.files.map(file => (\r\n            <li key={file.name}>\r\n                {file.name} - {file.size} bytes\r\n            </li>\r\n        ));\r\n\r\n        return ( \r\n            <Dropzone onDrop={this.onDrop} accept='image/png, image/jpeg'>\r\n            {({getRootProps, getInputProps}) => (\r\n            <section className=\"container\">\r\n                <div {...getRootProps({className: 'dropzone back'})}>\r\n                    <input {...getInputProps()} />\r\n                    <i className=\"far fa-image mb-2 dropbox_text\" style={{fontSize:100}}></i>\r\n                    <p className='dropbox_text'>Drag 'n' drop some files here, or click to select files</p>\r\n                </div>\r\n                <aside>\r\n                    {files}\r\n                </aside>\r\n\r\n                {this.state.files.length > 0 &&\r\n                <Button variant='dark' size='lg' className='mt-3' onClick={this.sendImage}>Select Image</Button>\r\n                }\r\n                \r\n                {this.state.isLoading &&\r\n                <Spinner animation=\"grow\" role=\"status\"></Spinner>\r\n                }\r\n\r\n                {this.state.userImage &&\r\n                <React.Fragment>\r\n                <Alert variant='dark'>\r\n                    {this.state.userImage.data.classification}\r\n                </Alert>\r\n                <Image className='justify-content'/>\r\n                </React.Fragment>\r\n                }\r\n\r\n            </section>\r\n            )}\r\n            </Dropzone>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Classifier;"]},"metadata":{},"sourceType":"module"}