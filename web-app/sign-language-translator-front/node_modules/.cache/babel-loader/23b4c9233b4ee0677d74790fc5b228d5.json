{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Documents\\\\FYP\\\\code\\\\sign-language-translator\\\\sign-language-translator-front\\\\src\\\\components\\\\classifier\\\\Classifier.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport './Classifier.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Classifier extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      files: []\n    };\n\n    this.onDrop = files => {\n      this.setState({\n        files\n      });\n    };\n  }\n\n  // https://react-dropzone.js.org/\n  render() {\n    const files = this.state.files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [file.name, \" - \", file.size, \" bytes\"]\n    }, file.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(Dropzone, {\n      onDrop: this.onDrop,\n      accept: \"image/png\",\n      children: ({\n        getRootProps,\n        getInputProps\n      }) => /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n            className: 'dropzone back'\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag 'n' drop some files here, or click to select files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: files\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Classifier;","map":{"version":3,"sources":["C:/Users/Joseph/Documents/FYP/code/sign-language-translator/sign-language-translator-front/src/components/classifier/Classifier.js"],"names":["React","Component","Dropzone","Classifier","state","files","onDrop","setState","render","map","file","name","size","getRootProps","getInputProps","className"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACvB;AACJC,MAAAA,KAAK,EAAE;AADH,KADuB;;AAAA,SAK/BC,MAL+B,GAKtBD,KAAD,IAAW;AACf,WAAKE,QAAL,CAAc;AAACF,QAAAA;AAAD,OAAd;AACH,KAP8B;AAAA;;AAS/B;AACAG,EAAAA,MAAM,GAAG;AACL,UAAMH,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBI,GAAjB,CAAqBC,IAAI,iBACnC;AAAA,iBACKA,IAAI,CAACC,IADV,SACmBD,IAAI,CAACE,IADxB;AAAA,OAASF,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA,YADU,CAAd;AAKA,wBACI,QAAC,QAAD;AAAU,MAAA,MAAM,EAAE,KAAKL,MAAvB;AAA+B,MAAA,MAAM,EAAC,WAAtC;AAAA,gBACC,CAAC;AAACO,QAAAA,YAAD;AAAeC,QAAAA;AAAf,OAAD,kBACD;AAAS,QAAA,SAAS,EAAC,WAAnB;AAAA,gCACI,oBAASD,YAAY,CAAC;AAACE,YAAAA,SAAS,EAAE;AAAZ,WAAD,CAArB;AAAA,kCACA,sBAAWD,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,sBAAKT;AAAL;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AAhC8B;;AAmCnC,eAAeF,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport './Classifier.css';\r\n\r\nclass Classifier extends Component {\r\n    state = { \r\n        files: []\r\n    }\r\n\r\n    onDrop =(files) => {\r\n        this.setState({files})\r\n    }\r\n\r\n    // https://react-dropzone.js.org/\r\n    render() { \r\n        const files = this.state.files.map(file => (\r\n            <li key={file.name}>\r\n                {file.name} - {file.size} bytes\r\n            </li>\r\n        ));\r\n        return ( \r\n            <Dropzone onDrop={this.onDrop} accept='image/png'>\r\n            {({getRootProps, getInputProps}) => (\r\n            <section className=\"container\">\r\n                <div {...getRootProps({className: 'dropzone back'})}>\r\n                <input {...getInputProps()} />\r\n                <p>Drag 'n' drop some files here, or click to select files</p>\r\n                </div>\r\n                <aside>\r\n                <h4>Files</h4>\r\n                <ul>{files}</ul>\r\n                </aside>\r\n            </section>\r\n            )}\r\n            </Dropzone>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Classifier;"]},"metadata":{},"sourceType":"module"}